import EventBridge;
import Util;
import Console;

/**
* PutEvents
*/
static function PutEvents(client: EventBridge) throws: void{
    var event = new EventBridge.CloudEvent{};
    event.datacontenttype = 'application/json';
    event.data = Util.toBytes('test');
    event.id = 'a5074581-7e74-4e4c-868f-47e7afdf8445';
    event.source = 'acs.oss';
    event.specversion = '1.0';
    event.type = 'oss:ObjectCreated:PostObject';
    event.time = '2020-08-24T13:54:05.965Asia/Shanghai';
    event.subject = '1.0';
    event.type = 'acs:oss:cn-hangzhou:1234567:xls-papk/game_apk/123.jpg';
    event.extensions = {
        aliyuneventbusname = "demo-bus",
    };
    try {
        var resp = client.putEvents([ event ]);
        Console.log("--------------------Publish event to the aliyun EventBus--------------------");
        Console.log(Util.toJSONString(resp));
    } catch (error) {
        Console.log(error.message);
    }

static function addTargetsSample(client: EventBridge) throws: void{
        try {
            var addTargetsRequest = new CreateTargetsRequest();
            addTargetsRequest.eventBusName='demo-bus';
            addTargetsRequest.ruleName='myRule';

            var targetEntry = new TargetEntry();
            targetEntry.id='dingtalk.target';
            targetEntry.endpoint='https://oapi.dingtalk.com/robot/send?access_token=1019d4a19e2ef6b2f***********396fc5e94814ed8460';
            targetEntry.type='acs.dingtalk';

            var param1 = new EBTargetParam();
            param1.resourceKey='URL';
            param1.form='CONSTANT';
            param1.value='https://oapi.dingtalk.com/robot/send?access_token=1019d4a19e2ef6b2f***********396fc5e94814ed8460';

            var param2 = new EBTargetParam();
            param2.resourceKey='SecretKey';
            param2.rorm='CONSTANT';
            param2.value='SEC121a71ff304a65b4f7c**************1f4d9f6c1ca514300d15234';

            var param3 = new EBTargetParam();
            param3.resourceKey='Body';
            param3.form='TEMPLATE';
            param3.value="{\n" + "    \"key\":\"$.source\",\n" + "    \"value\":\"$.data\"\n" + "}";
            param3.template="{\"msgtype\": \"text\",\"text\": " + "{\"content\": \"Helloï¼š${key}\"}}";

            var paramList = new Array();
            paramList[0]=param1;
            paramList[1]=param2;
            paramList[2]=param3;
            targetEntry.paramList = paramList;

            var list = new Array();
            list[0]=targetEntry;
            addTargetsRequest.targets=list;
            var response = client.createTargets([ addTargetsRequest ]);
            Console.log("--------------------Add targets success--------------------");
            Console.log(Util.toJSONString(response));
        } catch (error) {
            Console.log(error.message);
        }
    }

static function removeTargetsSample(client: EventBridge) throws: void{
        try {
            var removeTargetsResponse = new DeleteTargetsRequest();
            removeTargetsResponse.eventBusName='demo-bus';
            removeTargetsResponse.ruleName='myRule';
            var list = new Array();
            list[0]='dingtalk.target';
            removeTargetsResponse.targetIds=list;
            var response = client.deleteTargets([ removeTargetsResponse ]);
            Console.log("--------------------remove targets success--------------------");
            Console.log(Util.toJSONString(response));
        } catch (error) {
            Console.log(error.message);
        }
    }

static function listTargetsSample(client: EventBridge) throws: void{
        try {
            var listTargetsRequest = new ListTargetsRequest();
            listTargetsRequest.eventBusName='demo-bus';
            listTargetsRequest.ruleName='myRule';
            var response = client.listTargets([ listTargetsRequest ]);
            Console.log("--------------------list targets success--------------------");
            Console.log(Util.toJSONString(response));
        } catch (error) {
            Console.log(error.message);
        }
    }
}
